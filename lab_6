import time
import matplotlib.pyplot as plt
import math

def F_recursive(n):
    if n == 1:
        return 1
    else:
        return -F_recursive(n-1) + (n-1)
def G_recursive(n):
    if n == 1:
        return 1
    else:
        return -F_recursive(n-1) + math.factorial(n-1)
def E_recursive(n):
    if n == 1:
        return 1
    else:
        return (-1)**(n) * (F_recursive(n-1) - 2*G_recursive(n-1))
def E_iterative(n):
    if n == 1:
        return 1

    F_values = [0] * (n + 1)
    G_values = [0] * (n + 1)
    F_values[1] = 1
    G_values[1] = 1

    for i in range(2, n + 1):
        F_values[i] = -F_values[i-1] + (i - 1)
        G_values[i] = -F_values[i-1] + math.factorial(i-1)
    return (-1)**n * (F_values[n-1] - 2*G_values[n-1])

def measure_time(func, n, number=100):
    start_time = time.perf_counter()
    for _ in range(number):
        func(n)
    end_time = time.perf_counter()
    return (end_time - start_time) * 1000 / number

def main():
    n = int(input("Введите натуральное число N: "))
    results = {
        'n': [],
        'E_rec': [],
        'E_iter': [],
        'time_rec': [],
        'time_iter': []
    }

    for i in range(1, n + 1):
        results['n'].append(i)
        E_rec = E_recursive(i)
        time_rec = measure_time(E_recursive, i)
        E_iter = E_iterative(i)
        time_iter = measure_time(E_iterative, i)
        results['E_rec'].append(E_rec)
        results['E_iter'].append(E_iter)
        results['time_rec'].append(time_rec)
        results['time_iter'].append(time_iter)

    print("\nРезультаты вычислений:")
    print(f"{'n':<5}{'E рекурсивно':<20}{'E итеративно':<20}{'Время рекурсии (мс)':<20}{'Время итерации (мс)':<20}")
    for i in range(n):
        print(f"{results['n'][i]:<5}{results['E_rec'][i]:<20}{results['E_iter'][i]:<20}{results['time_rec'][i]:<20.6f}{results['time_iter'][i]:<20.6f}")
    plt.plot(results['n'], results['time_rec'], 'r-', label='Рекурсия')
    plt.plot(results['n'], results['time_iter'], 'b-', label='Итерация')
    plt.xlabel('N')
    plt.ylabel('Время (мс)')
    plt.title('Время выполнения рекурсивного и итеративного вычислений E(n)')
    plt.legend()
    plt.grid(True)
    plt.show()
if __name__ == "__main__":
    main()
